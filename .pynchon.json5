//
//  pynchon is a docs-generation tool.
//
//  this config is used implicitly with
//  any direct invocations of the `pynchon` CLI
//  tool, sometimes via `make docs` (which drives the CLI)
{
  // BEGIN: top-level config
  // Everything here is optional.
  // Literals only; no templating please!
  "src_root": "src",

  "src_patterns": [
    "*.py",
  ],

  "pkg_name": "pynchon",

  "docs_root": "docs",

  "plugins": [
    // Plugins that are loaded.
    // Some things are here implicitly,
    // since default plugins are added
    // regardless.  Default providers:
    // `python`, `project`, `git`.  Default
    // namespaces: `gen`, `render`.  Default
    // tools: `json`.

    // Recommended for projects with source-code
    "fixme", "todo", "headers",

    // Standard if there's a python-project
    "pypi", "python-api", "python-cli",

    // For projects with intermediate representations
    "dot",   // graphviz dot-files
    "jinja", // projects with templated docs

    // For projects management & grooming
    "scaffolding", // a boilerplate-manager
  ],


  "globals": {
    // Global-config.
    // Well-behaved plugins will honor values here
    "exclude_patterns": [
      ".*[.]pyc",
      "**/build/lib/**",
    ],

  }, // END top-level config.

  // BEGIN plugins-config
  // Hooks plugin customization.
  "hooks":{},

  // Dot (graphviz) plugin customization.
  "dot":{},

  // FixMe plugin customization.
  "fixme": {
    "exclude_patterns": [
       // allows {paths|globs|tmpl}
      // will include `globals.exclude_patterns`
      "**/*.egg-info/**",
      "src/pynchon/plugins/fixme/**",
      "src/pynchon/templates/**",
    ],
  },

  // PythonAPI plugin customization.
  "python-api":{
    "skip_private_methods": true,
    "skip_patterns": [],
  },

  // Scaffolding plugin customization.
  "scaffolding":{
    "exclude_patterns": [
      // includes globals
    ],
    "scaffolds":[
      // list of Scaffolds-objects
      {
        "name": "subproject tox.ini's",
        "pattern": "**/tox.ini",
        "scope":"*",
        "src":"pyproject.toml",
       },
     ],
   },

   // Scaffolding plugin customization.
   "jinja":{
     "context_vars": {
        // allows {tpls|json}
       // extra context-vars passed for renders
      },

     "filter_includes": [
       // allows {tpls|paths|globs}
      // where to load jinja filters from
     ],

    "exclude_patterns": [
       // allows {tpls|paths|globs}
      // files that shouldn't show up in plans
      "{{pynchon.src_root}}/pynchon/templates/**",
    ],

    "template_includes": [
       // allows {tpls|paths|globs}
      // paths to load templates from
      "{{pynchon.docs_root}}/includes",
    ],
  },

  // Scaffolding plugin customization.
  "pypi": {
    "name":"THE public PyPI"
  }
}
